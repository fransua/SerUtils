"""
test based on examples in https://github.com/kipkurui/MARSTools
"""

import unittest
from ..sequence.pwm_stats import _single_fisim, get_fisim

MAT1 = list(zip(*[[0.128000, 0.072000, 0.142000, 0.658000],
                 [0.078000, 0.036000, 0.882000, 0.004000],
                 [0.154000, 0.523000, 0.023000, 0.300000],
                 [0.001000, 0.001000, 0.997000, 0.001000],
                 [0.001000, 0.001000, 0.282000, 0.716000],
                 [0.027000, 0.001000, 0.971000, 0.001000],
                 [0.001000, 0.002000, 0.973000, 0.024000],
                 [0.001000, 0.001000, 0.997000, 0.001000],
                 [0.153000, 0.415000, 0.010000, 0.422000],
                 [0.034000, 0.002000, 0.940000, 0.024000]]))

MAT2 = list(zip(*[[0.143737, 0.297741, 0.478439, 0.080082],
                 [0.213552, 0.258727, 0.386037, 0.141684],
                 [0.190965, 0.248460, 0.457906, 0.102669],
                 [0.149897, 0.178645, 0.279261, 0.392197],
                 [0.034908, 0.043121, 0.921971, 0.000000],
                 [0.080082, 0.856263, 0.000000, 0.063655],
                 [0.000000, 0.000000, 1.000000, 0.000000],
                 [0.000000, 0.006160, 0.542094, 0.451745],
                 [0.053388, 0.000000, 0.946612, 0.000000],
                 [0.000000, 0.000000, 1.000000, 0.000000],
                 [0.000000, 0.000000, 1.000000, 0.000000],
                 [0.086242, 0.714579, 0.000000, 0.199179],
                 [0.004107, 0.000000, 0.985626, 0.010267],
                 [0.047228, 0.020534, 0.774127, 0.158111],
                 [0.242300, 0.203285, 0.433265, 0.121150],
                 [0.225873, 0.172485, 0.472279, 0.129363],
                 [0.170431, 0.203285, 0.498973, 0.127310],
                 [0.168378, 0.318275, 0.367556, 0.145791],
                 [0.182752, 0.201232, 0.453799, 0.162218],
                 [0.182752, 0.248460, 0.449692, 0.119097],
                 [0.112936, 0.232033, 0.492813, 0.162218]]))


class TestFisim(unittest.TestCase):
    def test_fisim(self):
        C1 = [0, 0.9, 0.1, 0]
        C2 = [0.1, 0.05, 0.05, 0.8]
        fisim = _single_fisim(C1, C2)
        self.assertAlmostEqual(0.2, fisim)

    def test_align_fisim(self):
        fisim1, i = get_fisim(MAT1, MAT2)
        fisim2, j = get_fisim(MAT1, MAT2, count_unaligned=True)
        self.assertAlmostEqual(0.8688994, fisim1)
        self.assertAlmostEqual(0.8241095, fisim2)

if __name__ == '__main__':
    unittest.main()
